version: '2'
services:
    config-server:
        image: config-server:latest
        container_name: config-server-container
        ports:
            - 8888:8888
        networks:
            - spring-cloud-network


    service-registry-server:
        image: service-registry:latest
        container_name: service-registry-container
        ports:
            - 8761:8761
        networks:
            - spring-cloud-network

    database:
        image: mysql:8
        container_name: mysql-container
        volumes:
          - mysql-volume:/var/lib/mysql
        ports:
            - 3306:3306
        networks:
            - spring-cloud-network
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=inbox_schema


    auth-server:
        image: auth-service:latest
        container_name: auth-server-container
        ports:
            - 8080:8080
        networks:
            - spring-cloud-network
        environment:
            - RDS_HOSTNAME=database
            - RDS_PORT=3306
            - RDS_DB_NAME=inbox_schema
            - SERVICEREGISTRY_HOSTNAME=service-registry-container
            - SERVICEREGISTRY_PORT=8761
        depends_on:
            - database
            - service-registry-server


    admin-server:
        image: admin-service:latest
        container_name: admin-service-container
        ports:
            - 8085:8085
        networks:
            - spring-cloud-network
        environment:
            - RDS_HOSTNAME=database
            - RDS_PORT=3306
            - RDS_DB_NAME=inbox_schema
            - SERVICEREGISTRY_HOSTNAME=service-registry-container
            - SERVICEREGISTRY_PORT=8761
            - CONFIG_HOSTNAME=config-server-container
            - CONFIG_PORT=8888
            - AUTH_HOSTNAME=auth-server-container
            - AUTH_PORT=8080
            - BROKER_HOSTNAME=broker
            - BROKER_PORT=9092
        depends_on:
            - database
            - service-registry-server
            - config-server
            - auth-server
            - broker



    patient-server:
        image: patient-service:latest
        container_name: patient-service-container
        ports:
            - 8082:8082
        networks:
            - spring-cloud-network
        environment:
            - RDS_HOSTNAME=database
            - RDS_PORT=3306
            - RDS_DB_NAME=inbox_schema
            - SERVICEREGISTRY_HOSTNAME=service-registry-container
            - SERVICEREGISTRY_PORT=8761
            - CONFIG_HOSTNAME=config-server-container
            - CONFIG_PORT=8888
            - AUTH_HOSTNAME=auth-server-container
            - AUTH_PORT=8080
        depends_on:
            - database
            - service-registry-server
            - config-server
            - auth-server

    inbox-server:
        image: inbox-server:latest
        container_name: inbox-container
        ports:
            - 8081:8081
        networks:
            - spring-cloud-network
        environment:
            - RDS_HOSTNAME=database
            - RDS_PORT=3306
            - RDS_DB_NAME=inbox_schema
            - SERVICEREGISTRY_HOSTNAME=service-registry-container
            - SERVICEREGISTRY_PORT=8761
            - CONFIG_HOSTNAME=config-server-container
            - CONFIG_PORT=8888
        depends_on:
            - database
            - service-registry-server
            - config-server

    mailsender-server:
        image: mail-sender:latest
        container_name: mailsender-container
        ports:
            - 9595:9595
        networks:
            - spring-cloud-network
        environment:
            - SERVICEREGISTRY_HOSTNAME=service-registry-container
            - SERVICEREGISTRY_PORT=8761
            - BROKER_HOSTNAME=broker
            - BROKER_PORT=9092
            - CONFIG_HOSTNAME=config-server-container
            - CONFIG_PORT=8888
        depends_on:
            - service-registry-server
            - broker


    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        hostname: zookeeper
        container_name: zookeeper
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
        ports:
            - 2181:2181
        expose:
          - "2181"
        networks:
            - spring-cloud-network

    broker:
        image: confluentinc/cp-kafka:latest
        hostname: broker
        container_name: broker
        ports:
            - 9092:9092
            - 29092:29092
        environment:
               KAFKA_BROKER_ID: 1
               KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
               KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
               KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
               KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
               KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
               CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        depends_on:
            - zookeeper
        networks:
            - spring-cloud-network

    kafka-setup:
        image: confluentinc/cp-kafka:latest
        hostname: kafka-setup
        container_name: kafka-setup
        command: "bash -c 'echo Waiting for Kafka to be ready... && \
                           cub kafka-ready -b broker:9092 1 400 && \
                           kafka-topics --create --if-not-exists --zookeeper zookeeper:2181 --partitions 4 --replication-factor 1 --topic mail-send' "

        environment:
               KAFKA_BROKER_ID: ignored
               KAFKA_ZOOKEEPER_CONNECT: ignored
        depends_on:
            - broker
        networks:
            - spring-cloud-network

volumes:
   mysql-volume:

networks:
    spring-cloud-network:
        driver: bridge
